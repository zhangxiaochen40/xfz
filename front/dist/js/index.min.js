function Banner(){this.bannerGroup=$("#banner-group"),this.index=0,this.bannerWidth=798,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.pageControl=$(".page-control"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length}function Index(){var n=this;n.page=2,n.category_id=0,n.loadBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(n){var t=new Date(n),e=t.getTime(),i=((new Date).getTime()-e)/1e3;return i<60?"刚刚":60<=i&&i<3600?(minutes=parseInt(i/60),minutes+"分钟前"):3600<=i&&i<86400?(hours=parseInt(i/60/60),hours+"小时前"):86400<=i&&i<2592e3?(days=parseInt(i/60/60/24),days+"天前"):t.getFullYear()+"/"+t.getMonth()+"/"+t.getDay()+" "+t.getHours()+":"+t.getMinutes()}}Banner.prototype.run=function(){this.ininBanner(),this.loop(),this.toggelArrow(),this.listenBannerHover(),this.listenArrowClick(),this.initPageControl(),this.listenPageControl()},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n,e.animate()})})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggelArrow()},function(){n.loop(),n.toggelArrow()})},Banner.prototype.listenArrowClick=function(){var n=this;this.leftArrow.click(function(){0===n.index?n.index=n.bannerCount-1:n.index--,n.animate()}),this.rightArrow.click(function(){n.index===n.bannerCount-1?n.index=0:n.index++,n.animate()})},Banner.prototype.initPageControl=function(){for(var n=this,t=$(".page-control"),e=0;e<n.bannerCount;e++){var i=$("<li></li>");t.append(i),0===e&&i.addClass("active")}t.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.ininBanner=function(){this.bannerUl.css({width:this.bannerWidth*this.bannerCount})},Banner.prototype.animate=function(){var n=this;n.bannerUl.animate({left:-798*n.index},500),n.pageControl.children("li").eq(n.index).addClass("active").siblings().removeClass("active")},Banner.prototype.toggelArrow=function(){this.leftArrow.toggle(),this.rightArrow.toggle()},Banner.prototype.loop=function(){$(".banner-ul");var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount-1?n.index=0:n.index++,n.animate()},2e3)},Index.prototype.run=function(){this.LoadMore(),this.listenCategorySwitchEvent()},Index.prototype.LoadMore=function(){var i=this,r=$("#load-more-btn");r.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),console.log(t),i.page+=1}else r.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab").children().click(function(){var r=$(this),o=r.attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:o,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),a.page=2,a.category_id=o,r.addClass("active").siblings().removeClass("active"),a.loadBtn.show()}}})})},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhbm5lciIsInRoaXMiLCJiYW5uZXJHcm91cCIsIiQiLCJpbmRleCIsImJhbm5lcldpZHRoIiwibGVmdEFycm93IiwicmlnaHRBcnJvdyIsImJhbm5lclVsIiwicGFnZUNvbnRyb2wiLCJsaUxpc3QiLCJjaGlsZHJlbiIsImJhbm5lckNvdW50IiwibGVuZ3RoIiwiSW5kZXgiLCJzZWxmIiwicGFnZSIsImNhdGVnb3J5X2lkIiwibG9hZEJ0biIsInRlbXBsYXRlIiwiZGVmYXVsdHMiLCJpbXBvcnRzIiwidGltZVNpbmNlIiwiZGF0ZVZhbHVlIiwiZGF0ZSIsIkRhdGUiLCJkYXRldHMiLCJnZXRUaW1lIiwidGltZXN0YW1wIiwibWludXRlcyIsInBhcnNlSW50IiwiaG91cnMiLCJkYXlzIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERheSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInByb3RvdHlwZSIsInJ1biIsImluaW5CYW5uZXIiLCJsb29wIiwidG9nZ2VsQXJyb3ciLCJsaXN0ZW5CYW5uZXJIb3ZlciIsImxpc3RlbkFycm93Q2xpY2siLCJpbml0UGFnZUNvbnRyb2wiLCJsaXN0ZW5QYWdlQ29udHJvbCIsImVhY2giLCJvYmoiLCJjbGljayIsImFuaW1hdGUiLCJob3ZlciIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lciIsImkiLCJjaXJjbGUiLCJhcHBlbmQiLCJhZGRDbGFzcyIsImNzcyIsIndpZHRoIiwibGVmdCIsImVxIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZSIsInNldEludGVydmFsIiwiTG9hZE1vcmUiLCJsaXN0ZW5DYXRlZ29yeVN3aXRjaEV2ZW50IiwieGZ6YWpheCIsImdldCIsInVybCIsImRhdGEiLCJwIiwic3VjY2VzcyIsInJlc3VsdCIsIm5ld3NlcyIsInRwbCIsImNvbnNvbGUiLCJsb2ciLCJoaWRlIiwibGkiLCJhdHRyIiwidWwiLCJlbXB0eSIsInNob3ciXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFNBQ0xDLEtBQUtDLFlBQWNDLEVBQUUsaUJBQ3JCRixLQUFLRyxNQUFRLEVBRWJILEtBQUtJLFlBQVksSUFFakJKLEtBQUtLLFVBQVVILEVBQUUsZUFDakJGLEtBQUtNLFdBQVdKLEVBQUUsZ0JBQ2xCRixLQUFLTyxTQUFVTCxFQUFFLGNBQ2pCRixLQUFLUSxZQUFjTixFQUFFLGlCQUNyQkYsS0FBS1MsT0FBU1QsS0FBS08sU0FBU0csU0FBUyxNQUVyQ1YsS0FBS1csWUFBY1gsS0FBS1MsT0FBT0csT0FpSW5DLFNBQVNDLFFBQ04sSUFBSUMsRUFBTWQsS0FDVmMsRUFBS0MsS0FBSyxFQUNWRCxFQUFLRSxZQUFjLEVBQ25CRixFQUFLRyxRQUFVZixFQUFFLGtCQUVqQmdCLFNBQVNDLFNBQVNDLFFBQVFDLFVBQVksU0FBVUMsR0FDdkMsSUFBSUMsRUFBTyxJQUFJQyxLQUFLRixHQUNoQkcsRUFBU0YsRUFBS0csVUFFZEMsSUFEUSxJQUFLSCxNQUFRRSxVQUNBRCxHQUFRLElBQ2pDLE9BQUdFLEVBQVksR0FDSixLQUVVLElBQWJBLEdBQW1CQSxFQUFZLE1BQ25DQyxRQUFVQyxTQUFTRixFQUFZLElBQ3hCQyxRQUFRLE9BRUUsTUFBYkQsR0FBc0JBLEVBQVksT0FDdENHLE1BQVFELFNBQVNGLEVBQVksR0FBSyxJQUMzQkcsTUFBTSxPQUVJLE9BQWJILEdBQXlCQSxFQUFZLFFBQ3pDSSxLQUFPRixTQUFTRixFQUFZLEdBQUssR0FBSyxJQUMvQkksS0FBTyxNQUVIUixFQUFLUyxjQUtKLElBSkFULEVBQUtVLFdBSUssSUFIWlYsRUFBS1csU0FHZSxJQUZuQlgsRUFBS1ksV0FFdUIsSUFEMUJaLEVBQUthLGNBM0psQ3JDLE9BQU9zQyxVQUFVQyxJQUFJLFdBRWpCdEMsS0FBS3VDLGFBQ0x2QyxLQUFLd0MsT0FDTHhDLEtBQUt5QyxjQUVMekMsS0FBSzBDLG9CQUNMMUMsS0FBSzJDLG1CQU5NM0MsS0FRTjRDLGtCQUNMNUMsS0FBSzZDLHFCQUlUOUMsT0FBT3NDLFVBQVVRLGtCQUFvQixXQUNqQyxJQUFJL0IsRUFBTWQsS0FDVmMsRUFBS04sWUFBWUUsU0FBUyxNQUFNb0MsS0FBSyxTQUFVM0MsRUFBTTRDLEdBQ2pEN0MsRUFBRTZDLEdBQUtDLE1BQU0sV0FDVGxDLEVBQUtYLE1BQU1BLEVBRVhXLEVBQUttQyxlQU9qQmxELE9BQU9zQyxVQUFVSyxrQkFBb0IsV0FDakMsSUFBSTVCLEVBQU9kLEtBQ1hBLEtBQUtDLFlBQVlpRCxNQUFNLFdBRW5CQyxjQUFjckMsRUFBS3NDLE9BQ25CdEMsRUFBSzJCLGVBQ1AsV0FFRTNCLEVBQUswQixPQUNMMUIsRUFBSzJCLGlCQUtiMUMsT0FBT3NDLFVBQVVNLGlCQUFtQixXQUNoQyxJQUFJN0IsRUFBT2QsS0FFWEEsS0FBS0ssVUFBVTJDLE1BQU0sV0FDRCxJQUFibEMsRUFBS1gsTUFFSlcsRUFBS1gsTUFBUVcsRUFBS0gsWUFBWSxFQUk5QkcsRUFBS1gsUUFFVFcsRUFBS21DLFlBR1RqRCxLQUFLTSxXQUFXMEMsTUFBTSxXQUNmbEMsRUFBS1gsUUFBVVcsRUFBS0gsWUFBWSxFQUUvQkcsRUFBS1gsTUFBTSxFQUlYVyxFQUFLWCxRQUdUVyxFQUFLbUMsYUFLYmxELE9BQU9zQyxVQUFVTyxnQkFBaUIsV0FHOUIsSUFGQSxJQUFJOUIsRUFBT2QsS0FDUFEsRUFBY04sRUFBRSxpQkFDWG1ELEVBQUcsRUFBR0EsRUFBRXZDLEVBQUtILFlBQWEwQyxJQUFLLENBQ3BDLElBQUlDLEVBQVNwRCxFQUFFLGFBQ2ZNLEVBQVkrQyxPQUFPRCxHQUNaLElBQUpELEdBQ0VDLEVBQU9FLFNBQVMsVUFHekJoRCxFQUFZaUQsSUFBSSxDQUFDQyxNQUF5QixHQUFqQjVDLEVBQUtILFlBQWUsR0FBSSxJQUFJRyxFQUFLSCxZQUFZLE1BSTFFWixPQUFPc0MsVUFBVUUsV0FBYSxXQUUxQnZDLEtBQUtPLFNBQVNrRCxJQUFJLENBQUNDLE1BRFQxRCxLQUNzQkksWUFEdEJKLEtBQ3VDVyxlQUtyRFosT0FBT3NDLFVBQVVZLFFBQVUsV0FDdkIsSUFBSW5DLEVBQU1kLEtBQ1ZjLEVBQUtQLFNBQVMwQyxRQUFRLENBQUNVLE1BQVEsSUFBSTdDLEVBQUtYLE9BQU8sS0FDL0NXLEVBQUtOLFlBQVlFLFNBQVMsTUFBTWtELEdBQUc5QyxFQUFLWCxPQUFPcUQsU0FBUyxVQUFVSyxXQUFXQyxZQUFZLFdBSTdGL0QsT0FBT3NDLFVBQVVJLFlBQWMsV0FDakJ6QyxLQUNMSyxVQUFVMEQsU0FETC9ELEtBRUxNLFdBQVd5RCxVQUlwQmhFLE9BQU9zQyxVQUFVRyxLQUFPLFdBQ0x0QyxFQUFFLGNBQWpCLElBRUlZLEVBQU9kLEtBRVhBLEtBQUtvRCxNQUFRWSxZQUFZLFdBQ2xCbEQsRUFBS1gsT0FBT1csRUFBS0gsWUFBWSxFQUU1QkcsRUFBS1gsTUFBTSxFQUlYVyxFQUFLWCxRQUVUVyxFQUFLbUMsV0FDUCxNQXdDTnBDLE1BQU13QixVQUFVQyxJQUFLLFdBQ1B0QyxLQUNMaUUsV0FES2pFLEtBRUxrRSw2QkFJVHJELE1BQU13QixVQUFVNEIsU0FBUyxXQUNyQixJQUFJbkQsRUFBTWQsS0FDTmlCLEVBQVFmLEVBQUUsa0JBQ2RlLEVBQVErQixNQUFNLFdBRVZtQixRQUFRQyxJQUFJLENBQ1JDLElBQU0sY0FDTkMsS0FBTyxDQUNIQyxFQUFJekQsRUFBS0MsS0FDVEMsWUFBY0YsRUFBS0UsYUFFdkJ3RCxRQUFVLFNBQVVDLEdBQ2hCLEdBQW9CLE1BQWpCQSxFQUFhLEtBQVEsQ0FDcEIsSUFBSUMsRUFBU0QsRUFBYSxLQUMxQixHQUFpQixFQUFkQyxFQUFPOUQsT0FBVSxDQUNoQixJQUFJK0QsRUFBTXpELFNBQVMsWUFBYSxDQUFDd0QsT0FBVUEsSUFDbEN4RSxFQUFFLHFCQUNScUQsT0FBT29CLEdBQ1ZDLFFBQVFDLElBQUlILEdBQ1o1RCxFQUFLQyxNQUFRLE9BRWJFLEVBQVE2RCxjQVNoQ2pFLE1BQU13QixVQUFVNkIsMEJBQTBCLFdBQ2xDLElBQUlwRCxFQUFNZCxLQUNHRSxFQUFFLGFBQ05RLFdBQVdzQyxNQUFNLFdBQ3RCLElBQ0krQixFQUFLN0UsRUFBRUYsTUFDTmdCLEVBQWMrRCxFQUFHQyxLQUFLLGlCQUMzQmIsUUFBUUMsSUFBSSxDQUNSQyxJQUFNLGNBQ05DLEtBQU8sQ0FDSHRELFlBQWNBLEVBQ2R1RCxFQVBHLEdBU1BDLFFBQVUsU0FBVUMsR0FDaEIsR0FBb0IsTUFBakJBLEVBQWEsS0FBUSxDQUNwQixJQUFJQyxFQUFTRCxFQUFhLEtBQ3RCRSxFQUFNekQsU0FBUyxZQUFhLENBQUN3RCxPQUFVQSxJQUN2Q08sRUFBSy9FLEVBQUUscUJBQ1grRSxFQUFHQyxRQUNIRCxFQUFHMUIsT0FBT29CLEdBQ1Y3RCxFQUFLQyxLQUFPLEVBQ1pELEVBQUtFLFlBQWNBLEVBQ25CK0QsRUFBR3ZCLFNBQVMsVUFBVUssV0FBV0MsWUFBWSxVQUM3Q2hELEVBQUtHLFFBQVFrRSxjQVVyQ2pGLEVBQUUsWUFDYyxJQUFJSCxRQUNUdUMsT0FDSSxJQUFJekIsT0FDVHlCIiwiZmlsZSI6ImluZGV4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEJhbm5lcigpIHtcbiAgICB0aGlzLmJhbm5lckdyb3VwID0gJChcIiNiYW5uZXItZ3JvdXBcIik7XG4gICAgdGhpcy5pbmRleCA9IDA7XG4gICAgLy/ova7ms6Llm77kuK3kuIDkuKrova7ms6Llm77nmoTlrr3luqZcbiAgICB0aGlzLmJhbm5lcldpZHRoPTc5ODtcblxuICAgIHRoaXMubGVmdEFycm93PSQoJy5sZWZ0LWFycm93Jyk7XG4gICAgdGhpcy5yaWdodEFycm93PSQoJy5yaWdodC1hcnJvdycpO1xuICAgIHRoaXMuYmFubmVyVWwgPSQoJyNiYW5uZXItdWwnKTtcbiAgICB0aGlzLnBhZ2VDb250cm9sID0gJCgnLnBhZ2UtY29udHJvbCcpO1xuICAgIHRoaXMubGlMaXN0ID0gdGhpcy5iYW5uZXJVbC5jaGlsZHJlbignbGknKTtcbiAgICAvL+i9ruazouWbvueahOS4quaVsFxuICAgIHRoaXMuYmFubmVyQ291bnQgPSB0aGlzLmxpTGlzdC5sZW5ndGg7XG5cbn1cblxuQmFubmVyLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLmluaW5CYW5uZXIoKTtcbiAgICB0aGlzLmxvb3AoKTtcbiAgICB0aGlzLnRvZ2dlbEFycm93KCk7XG4gICAgLy/nm5HlkKzpvKDmoIfliJLov4fova7ms6Llm77nmoTkuovku7ZcbiAgICB0aGlzLmxpc3RlbkJhbm5lckhvdmVyKCk7XG4gICAgdGhpcy5saXN0ZW5BcnJvd0NsaWNrKCk7XG5cbiAgICBzZWxmLmluaXRQYWdlQ29udHJvbCgpO1xuICAgIHRoaXMubGlzdGVuUGFnZUNvbnRyb2woKTtcbn07XG5cbi8v55uR5ZCs6L2u5rOi5Zu+55qE5bCP54K554K5IOeahOeCueWHu+S6i+S7tlxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5QYWdlQ29udHJvbCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPXRoaXM7XG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbihcImxpXCIpLmVhY2goZnVuY3Rpb24gKGluZGV4LG9iaikge1xuICAgICAgICAkKG9iaikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2VsZi5pbmRleD1pbmRleDtcblxuICAgICAgICAgICAgc2VsZi5hbmltYXRlKCk7XG5cbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG5cbkJhbm5lci5wcm90b3R5cGUubGlzdGVuQmFubmVySG92ZXIgPSBmdW5jdGlvbigpe1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLmJhbm5lckdyb3VwLmhvdmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy/nrKzkuIDkuKrlh73mlbDmmK/miorpvKDmoIfnp7vliqjliLDova7ms6Llm77kuIrmiafooYznmoTlh73mlbBcbiAgICAgICAgY2xlYXJJbnRlcnZhbChzZWxmLnRpbWVyKTtcbiAgICAgICAgc2VsZi50b2dnZWxBcnJvdygpO1xuICAgIH0sZnVuY3Rpb24gKCkge1xuICAgICAgICAvL+esrOS6jOS4quaWueazleaYr+aKium8oOagh+S7jui9ruazouWbvuS4iuenu+i1sOaXtuaJp+ihjOeahOWHveaVsFxuICAgICAgICBzZWxmLmxvb3AoKTtcbiAgICAgICAgc2VsZi50b2dnZWxBcnJvdygpO1xuICAgIH0pXG59O1xuXG4vL+ebkeWQrOeureWktOeahOeCueWHu+S6i+S7tlxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5BcnJvd0NsaWNrID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgLy/lt6bovrnnmoTnrq3lpLRcbiAgICB0aGlzLmxlZnRBcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKHNlbGYuaW5kZXg9PT0wKVxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gc2VsZi5iYW5uZXJDb3VudC0xO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgc2VsZi5pbmRleC0tO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuYW5pbWF0ZSgpO1xuICAgIH0pO1xuICAgIC8v5Y+z6L6555qE566t5aS0XG4gICAgdGhpcy5yaWdodEFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYoc2VsZi5pbmRleCA9PT0gc2VsZi5iYW5uZXJDb3VudC0xKVxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLmluZGV4PTA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLmluZGV4Kys7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2VsZi5iYW5uZXJVbC5hbmltYXRlKHsnbGVmdCc6LTc5OCpzZWxmLmluZGV4fSw1MDApO1xuICAgICAgICBzZWxmLmFuaW1hdGUoKTtcbiAgICB9KVxufTtcblxuLy/liJ3lp4vljJbova7ms6Llm77nmoTlsI/ngrnngrlcbkJhbm5lci5wcm90b3R5cGUuaW5pdFBhZ2VDb250cm9sID1mdW5jdGlvbigpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIHBhZ2VDb250cm9sID0gJChcIi5wYWdlLWNvbnRyb2xcIik7XG4gICAgZm9yICh2YXIgaSA9MDsgaTxzZWxmLmJhbm5lckNvdW50OyBpKyspIHtcbiAgICAgICAgdmFyIGNpcmNsZSA9ICQoXCI8bGk+PC9saT5cIik7XG4gICAgICAgIHBhZ2VDb250cm9sLmFwcGVuZChjaXJjbGUpO1xuICAgICAgICBpZihpPT09MCkge1xuICAgICAgICAgICAgIGNpcmNsZS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFnZUNvbnRyb2wuY3NzKHtcIndpZHRoXCI6c2VsZi5iYW5uZXJDb3VudCoxMis4KjIrMTYqKHNlbGYuYmFubmVyQ291bnQtMSl9KVxufTtcblxuLy/orr7nva7ova7ms6Llm77nmoTmgLvlhbHnmoTlrr3luqZcbkJhbm5lci5wcm90b3R5cGUuaW5pbkJhbm5lciA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPXRoaXM7XG4gICAgdGhpcy5iYW5uZXJVbC5jc3Moe1wid2lkdGhcIjpzZWxmLmJhbm5lcldpZHRoKnNlbGYuYmFubmVyQ291bnR9KVxufTtcblxuXG4vL+WwgeijheS4gOS4qui9ruazouWbvuenu+WKqOeahOaWueazlVxuQmFubmVyLnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9dGhpcztcbiAgICBzZWxmLmJhbm5lclVsLmFuaW1hdGUoeydsZWZ0JzotNzk4KnNlbGYuaW5kZXh9LDUwMCk7XG4gICAgc2VsZi5wYWdlQ29udHJvbC5jaGlsZHJlbignbGknKS5lcShzZWxmLmluZGV4KS5hZGRDbGFzcygnYWN0aXZlJykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcbn07XG5cbi8v566t5aS055qE5pi+56S65oiW6ZqQ6JePXG5CYW5uZXIucHJvdG90eXBlLnRvZ2dlbEFycm93ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9dGhpcztcbiAgICBzZWxmLmxlZnRBcnJvdy50b2dnbGUoKTtcbiAgICBzZWxmLnJpZ2h0QXJyb3cudG9nZ2xlKCk7XG5cbn07XG5cbkJhbm5lci5wcm90b3R5cGUubG9vcCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIGJhbm5lclVsID0gJChcIi5iYW5uZXItdWxcIik7XG4gICAgdmFyIGluZGV4PTA7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIC8vIGJhbm5lclVsLmFuaW1hdGUoe1wibGVmdFwiIDogLTc5OH0sNTAwKTtcbiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZihzZWxmLmluZGV4Pj1zZWxmLmJhbm5lckNvdW50LTEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHNlbGYuaW5kZXg9MDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcblxuICAgICAgICAgICAgc2VsZi5pbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuYW5pbWF0ZSgpO1xuICAgIH0sMjAwMCk7XG59O1xuXG5cbmZ1bmN0aW9uIEluZGV4KCl7XG4gICB2YXIgc2VsZiA9dGhpcztcbiAgIHNlbGYucGFnZT0yO1xuICAgc2VsZi5jYXRlZ29yeV9pZCA9IDA7XG4gICBzZWxmLmxvYWRCdG4gPSAkKFwiI2xvYWQtbW9yZS1idG5cIik7XG5cbiAgIHRlbXBsYXRlLmRlZmF1bHRzLmltcG9ydHMudGltZVNpbmNlID0gZnVuY3Rpb24gKGRhdGVWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRlVmFsdWUpO1xuICAgICAgICAgICAgdmFyIGRhdGV0cyA9IGRhdGUuZ2V0VGltZSgpOyAvLyDlvpfliLDnmoTmmK/mr6vnp5LnmoRcbiAgICAgICAgICAgIHZhciBub3d0cyA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7IC8v5b6X5Yiw55qE5piv5b2T5YmN5pe26Ze055qE5pe26Ze05oizXG4gICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gKG5vd3RzIC0gZGF0ZXRzKS8xMDAwOyAvLyDpmaTku6UxMDAw77yM5b6X5Yiw55qE5piv56eSXG4gICAgICAgICAgICBpZih0aW1lc3RhbXAgPCA2MCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAn5Yia5YiaJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYodGltZXN0YW1wID49IDYwICYmIHRpbWVzdGFtcCA8IDYwKjYwKSB7XG4gICAgICAgICAgICAgICAgbWludXRlcyA9IHBhcnNlSW50KHRpbWVzdGFtcCAvIDYwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWludXRlcysn5YiG6ZKf5YmNJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYodGltZXN0YW1wID49IDYwKjYwICYmIHRpbWVzdGFtcCA8IDYwKjYwKjI0KSB7XG4gICAgICAgICAgICAgICAgaG91cnMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaG91cnMrJ+Wwj+aXtuWJjSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKHRpbWVzdGFtcCA+PSA2MCo2MCoyNCAmJiB0aW1lc3RhbXAgPCA2MCo2MCoyNCozMCkge1xuICAgICAgICAgICAgICAgIGRheXMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwIC8gMjQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXlzICsgJ+WkqeWJjSc7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgICAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgICAgICAgICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7XG4gICAgICAgICAgICAgICAgdmFyIGhvdXIgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgICAgICAgICAgICAgdmFyIG1pbnV0ZSA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgICAgIHJldHVybiB5ZWFyKycvJyttb250aCsnLycrZGF5K1wiIFwiK2hvdXIrXCI6XCIrbWludXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG59XG5cbkluZGV4LnByb3RvdHlwZS5ydW4gPWZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPXRoaXM7XG4gICAgc2VsZi5Mb2FkTW9yZSgpO1xuICAgIHNlbGYubGlzdGVuQ2F0ZWdvcnlTd2l0Y2hFdmVudCgpO1xufTtcblxuLy/liqDovb3mm7TlpJrmjInpkq7kuovku7ZcbkluZGV4LnByb3RvdHlwZS5Mb2FkTW9yZT1mdW5jdGlvbigpe1xuICAgIHZhciBzZWxmID10aGlzO1xuICAgIHZhciBsb2FkQnRuPSQoJyNsb2FkLW1vcmUtYnRuJyk7XG4gICAgbG9hZEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgJ3VybCc6Jy9uZXdzL2xpc3QvJyxcbiAgICAgICAgICAgICdkYXRhJzp7XG4gICAgICAgICAgICAgICAgJ3AnOnNlbGYucGFnZSxcbiAgICAgICAgICAgICAgICAnY2F0ZWdvcnlfaWQnOnNlbGYuY2F0ZWdvcnlfaWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnc3VjY2Vzcyc6ZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddPT09MjAwKXtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld3NlcyA9IHJlc3VsdFsnZGF0YSddO1xuICAgICAgICAgICAgICAgICAgICBpZihuZXdzZXMubGVuZ3RoPjApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cGwgPSB0ZW1wbGF0ZSgnbmV3cy1pdGVtJywgeyduZXdzZXMnOiBuZXdzZXN9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1bCA9ICQoJy5saXN0LWlubmVyLWdyb3VwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bC5hcHBlbmQodHBsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ld3Nlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnBhZ2UgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkQnRuLmhpZGUoKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pO1xufTtcblxuLy/nm5HlkKzmlrDpl7vnsbvliKvngrnlh7vkuovku7ZcbkluZGV4LnByb3RvdHlwZS5saXN0ZW5DYXRlZ29yeVN3aXRjaEV2ZW50PWZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciBzZWxmID10aGlzO1xuICAgICAgICB2YXIgdGFnR3JvdXA9JCgnLmxpc3QtdGFiJyk7XG4gICAgICAgIHRhZ0dyb3VwLmNoaWxkcmVuKCkuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHBhZ2UgPSAxO1xuICAgICAgICAgICAgdmFyIGxpID0gJCh0aGlzKTtcbiAgICAgICAgICAgICB2YXIgY2F0ZWdvcnlfaWQgPSBsaS5hdHRyKFwiZGF0YS1jYXRlZ29yeVwiKVxuICAgICAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgICAgICd1cmwnOicvbmV3cy9saXN0LycsXG4gICAgICAgICAgICAgICAgJ2RhdGEnOntcbiAgICAgICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzpjYXRlZ29yeV9pZCxcbiAgICAgICAgICAgICAgICAgICAgJ3AnOnBhZ2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddPT09MjAwKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdzZXMgPSByZXN1bHRbJ2RhdGEnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cGwgPSB0ZW1wbGF0ZSgnbmV3cy1pdGVtJywgeyduZXdzZXMnOiBuZXdzZXN9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1bCA9ICQoJy5saXN0LWlubmVyLWdyb3VwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bC5lbXB0eSgpXG4gICAgICAgICAgICAgICAgICAgICAgICB1bC5hcHBlbmQodHBsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYucGFnZSA9IDI7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNhdGVnb3J5X2lkID0gY2F0ZWdvcnlfaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaS5hZGRDbGFzcygnYWN0aXZlJykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmxvYWRCdG4uc2hvdygpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbn07XG5cblxuJChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGJhbm5lciA9bmV3IEJhbm5lcigpO1xuICAgIGJhbm5lci5ydW4oKTtcbiAgICB2YXIgaW5kZXggPW5ldyBJbmRleCgpO1xuICAgIGluZGV4LnJ1bigpO1xuXG59KTsiXX0=
